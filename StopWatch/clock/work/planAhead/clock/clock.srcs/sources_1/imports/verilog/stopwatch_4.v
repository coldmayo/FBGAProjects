/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module stopwatch_4 (
    input clk,
    input rst,
    input start_stop,
    output reg [13:0] value
  );
  
  
  
  localparam IDLE_state = 2'd0;
  localparam RUNNING_state = 2'd1;
  localparam PAUSED_state = 2'd2;
  
  reg [1:0] M_state_d, M_state_q = IDLE_state;
  reg [22:0] M_tenth_ctr_d, M_tenth_ctr_q = 1'h0;
  reg [13:0] M_ctr_d, M_ctr_q = 1'h0;
  
  wire [16-1:0] M_min_mins;
  reg [16-1:0] M_min_secs;
  sec_to_mins_10 min (
    .secs(M_min_secs),
    .mins(M_min_mins)
  );
  
  always @* begin
    M_state_d = M_state_q;
    M_tenth_ctr_d = M_tenth_ctr_q;
    M_ctr_d = M_ctr_q;
    
    value = M_ctr_q;
    M_min_secs = 1'h0;
    
    case (M_state_q)
      IDLE_state: begin
        M_tenth_ctr_d = 1'h0;
        M_ctr_d = 1'h0;
        if (start_stop) begin
          M_state_d = RUNNING_state;
        end
      end
      RUNNING_state: begin
        M_tenth_ctr_d = M_tenth_ctr_q + 1'h1;
        if (M_tenth_ctr_q == 23'h4c4b3f) begin
          M_tenth_ctr_d = 1'h0;
          M_ctr_d = M_ctr_q + 1'h1;
          M_min_secs = M_ctr_q;
          M_ctr_d = M_min_mins;
        end
        if (start_stop) begin
          M_state_d = PAUSED_state;
        end
      end
      PAUSED_state: begin
        if (start_stop) begin
          M_state_d = RUNNING_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_tenth_ctr_q <= M_tenth_ctr_d;
    M_ctr_q <= M_ctr_d;
    
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
